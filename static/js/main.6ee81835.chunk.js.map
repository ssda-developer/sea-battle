{"version":3,"sources":["enums/index.ts","store/types/area.ts","store/reducers/area.ts","store/types/game.ts","store/reducers/game.ts","store/reducers/index.ts","store/index.ts","store/action-creators/area.ts","store/action-creators/game.ts","store/action-creators/index.ts","hooks/useActions.ts","constants/index.ts","helpers/index.ts","utils/cell.ts","utils/customCreateShip.ts","utils/ship.ts","utils/field.ts","utils/randomLocationShips.ts","components/AreaAxes/index.ts","components/AreaAxes/AreaAxes.tsx","components/AreaButton/index.ts","components/AreaButton/AreaButton.tsx","components/AreaButtons/index.ts","components/AreaButtons/AreaButtons.tsx","hooks/index.ts","utils/randomComputerShot.ts","components/Cell/Cell.tsx","components/CellRow/CellRow.tsx","components/Field/index.ts","components/Field/Field.tsx","assets/icons/frown.svg","assets/icons/smile.svg","components/FinalMessage/index.ts","components/FinalMessage/FinalMessage.tsx","components/Hints/index.ts","components/Hints/Hints.tsx","components/Modal/index.ts","components/Modal/Modal.tsx","assets/icons/random.svg","assets/icons/play.svg","components/Rules/index.ts","components/Rules/Rules.tsx","components/Ship/Ship.tsx","components/ShipsRow/ShipRow.tsx","components/Ships/Ships.tsx","assets/icons/question.svg","assets/icons/times.svg","assets/icons/trash.svg","components/Area/index.ts","components/Area/Area.tsx","components/Game/Game.tsx","App.tsx","index.tsx"],"names":["HintOptions","Owners","ShipDirection","CellDirection","RENDER_USER_SQUARE","RENDER_COMPUTER_SQUARE","CHANGE_USER_SQUARE_COMPLETE","CHANGE_USER_SHIPS","CHANGE_COMPUTER_SHIPS","initialState","user","userField","userComplete","userShips","computer","computerField","computerShips","area","state","action","type","payload","CHANGE_GAME_START","CHANGE_GAME_OVER","CHANGE_CURRENT_PLAYER","gameStart","gameOver","currentPlayer","game","rootReducer","combineReducers","gameReducer","areaReducer","createStore","devToolsEnhancer","renderUserField","field","renderComputerField","changeUserFieldComplete","complete","changeUserShips","ships","changeComputerShips","changeGameStart","status","changeGameOver","changeCurrentPlayer","AreaActionCreators","GameActionCreators","useActions","dispatch","useDispatch","bindActionCreators","ActionCreators","AREA_NUMBERS","AREA_LETTERS","SHIPS","getUniqId","Math","random","toString","substr","getRandomValue","maxValue","floor","iteratingTwoDimensionalArray","array","func","length","i","j","iteratingFlatArray","flat","forEach","cell","getClassNames","classes","Object","entries","filter","map","join","getCellsAround","direction","Diagonal","numberUp","letterRight","numberDown","letterLeft","cellsDiagonal","cellsNonDiagonal","getCellCoordsById","cellId","coords","id","getCellsByDirection","Vertical","_","idx","getRandomEmptyCell","coordX","coordY","hit","miss","lockCell","currentShipId","ship","lock","lockId","lockAllEmptyCells","initialShips","initialShipId","initialShipLength","isStartCreateShip","resetInitialValues","resetInitialShipsValues","finishCreateShip","NonDiagonal","shipId","nonDiagonalCell","manageCreateShip","currentField","index","indexOf","splice","cancelCreateShip","startCreateShip","currentCellId","cellUp","cellRight","cellDown","cellLeft","maxShipLength","max","diagonalCell","explodeShip","arrayShip","countHitsShip","explode","currentCell","setMissCells","checkShot","getCellById","convertArrayShipsToRightFormat","temp","reduce","acc","values","sort","a","b","getNonExplodeShips","allNonExplodeShips","createField","number","row","letter","push","isFinishGame","getRandomCellCoords","shipLength","checkEmptyCells","calculableValue","nonCalculableValue","Horizontal","getInitialParams","shipDirection","fieldLength","getShipDirection","randomLocationShips","uniqShipId","posX","posY","startCreateRandomShip","AreaAxes","el","className","toUpperCase","AreaButton","icon","clicked","onClick","AreaButtons","children","firstHitCell","initialDirection","initialCellsForShot","VerticalCells","HorizontalCells","randomComputerShot","again","cellCoordX","cellCoordY","nonDiagonalCells","firstHitCoordX","firstHitCoordY","nonDiagonalCellsFirstHitOnShip","Cell","owner","User","Computer","isUser","isDisabled","useSelector","manageGameStatus","updateUserCellOnCreate","allShips","getAllShips","updateUserCellOnShot","setTimeout","isAgain","updateComputerCellOnShot","userClickMiss","userClickExplode","evn","preventDefault","aria-label","disabled","CellRow","cellRowOwner","Field","fieldOwner","useEffect","_extends","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","SvgFrown","_ref","svgRef","title","titleId","props","viewBox","ref","ForwardRef","SvgSmile","FinalMessage","player","message","Hints","hintText","Modal","clickedOutside","handleKeyDown","keyCode","handleClickOutside","classList","contains","window","addEventListener","removeEventListener","SvgRandom","xmlns","SvgPlay","Rules","Ship","cellCount","Array","partShip","ShipRow","shipHas","Ships","shipsOwner","shipsArray","slice","isHas","find","currentShip","findIndex","SvgQuestion","SvgTimes","SvgTrash","Area","areaOwner","PlayerShot","ComputerShot","useState","openHints","setOpenHints","displayHints","fieldClassNameDisabled","userClearFieldHandler","toLowerCase","Game","App","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.6ee81835.chunk.js","sourcesContent":["export enum HintOptions {\n    PlayerShot = 'Ваш ход',\n    ComputerShot = 'Ход компьютера',\n}\n\nexport enum Owners {\n    User = 'USER',\n    Computer = 'COMPUTER',\n}\n\nexport enum ShipDirection {\n    Horizontal = 'HORIZONTAL',\n    Vertical = 'VERTICAL',\n}\n\nexport enum CellDirection {\n    Diagonal = 'DIAGONAL',\n    NonDiagonal = 'NON-DIAGONAL',\n}\n","import { ICell } from '../../interface';\n\nexport const RENDER_USER_SQUARE = 'RENDER_USER_SQUARE';\nexport const RENDER_COMPUTER_SQUARE = 'RENDER_COMPUTER_SQUARE';\nexport const CHANGE_USER_SQUARE_COMPLETE = 'CHANGE_USER_SQUARE_COMPLETE';\nexport const CHANGE_USER_SHIPS = 'CHANGE_USER_SHIPS';\nexport const CHANGE_COMPUTER_SHIPS = 'CHANGE_COMPUTER_SHIPS';\n\nexport type RenderUserField = {\n    type: typeof RENDER_USER_SQUARE;\n    payload: ICell[][];\n};\n\nexport type RenderComputerField = {\n    type: typeof RENDER_COMPUTER_SQUARE;\n    payload: ICell[][];\n};\n\nexport type ChangeUserShips = {\n    type: typeof CHANGE_USER_SHIPS;\n    payload: number[];\n};\n\nexport type ChangeComputerShips = {\n    type: typeof CHANGE_COMPUTER_SHIPS;\n    payload: number[];\n};\n\nexport type ChangeUserFieldComplete = {\n    type: typeof CHANGE_USER_SQUARE_COMPLETE;\n    payload: boolean;\n};\n\nexport type AreaDispatchTypes = RenderUserField | RenderComputerField | ChangeUserFieldComplete | ChangeUserShips | ChangeComputerShips;\n","import {\n    RENDER_USER_SQUARE,\n    RENDER_COMPUTER_SQUARE,\n    CHANGE_USER_SQUARE_COMPLETE,\n    CHANGE_USER_SHIPS,\n    CHANGE_COMPUTER_SHIPS,\n    AreaDispatchTypes,\n} from '../types/area';\n\nimport { IArea } from '../../interface';\n\nconst initialState: IArea = {\n    user: {\n        userField: [],\n        userComplete: false,\n        userShips: [],\n    },\n    computer: {\n        computerField: [],\n        computerShips: [],\n    },\n};\n\nconst area = (state: IArea = initialState, action: AreaDispatchTypes): IArea => {\n    switch (action.type) {\n        case RENDER_USER_SQUARE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    userField: action.payload,\n                },\n            };\n        case RENDER_COMPUTER_SQUARE:\n            return {\n                ...state,\n                computer: {\n                    ...state.computer,\n                    computerField: action.payload,\n                },\n            };\n        case CHANGE_USER_SHIPS:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    userShips: action.payload,\n                },\n            };\n        case CHANGE_COMPUTER_SHIPS:\n            return {\n                ...state,\n                computer: {\n                    ...state.computer,\n                    computerShips: action.payload,\n                },\n            };\n        case CHANGE_USER_SQUARE_COMPLETE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    userComplete: action.payload,\n                },\n            };\n        default:\n            return state;\n    }\n};\n\nexport default area;\n","import { Owners } from '../../enums';\n\nexport const CHANGE_GAME_START = 'CHANGE_GAME_START';\nexport const CHANGE_GAME_OVER = 'CHANGE_GAME_OVER';\nexport const CHANGE_CURRENT_PLAYER = 'CHANGE_CURRENT_PLAYER';\n\nexport type ChangeGameStart = {\n    type: typeof CHANGE_GAME_START;\n    payload: boolean;\n};\n\nexport type ChangeGameOver = {\n    type: typeof CHANGE_GAME_OVER;\n    payload: boolean;\n};\n\nexport type ChangeCurrentPlayer = {\n    type: typeof CHANGE_CURRENT_PLAYER;\n    payload: Owners;\n};\n\nexport type GameDispatchTypes = ChangeGameStart | ChangeCurrentPlayer | ChangeGameOver;\n","import { CHANGE_CURRENT_PLAYER, CHANGE_GAME_OVER, CHANGE_GAME_START, GameDispatchTypes } from '../types/game';\n\nimport { IGame } from '../../interface';\n\nconst initialState: IGame = {\n    gameStart: false,\n    gameOver: false,\n    currentPlayer: null,\n};\n\nconst game = (state: IGame = initialState, action: GameDispatchTypes): IGame => {\n    switch (action.type) {\n        case CHANGE_GAME_START:\n            return {\n                ...state,\n                gameStart: action.payload,\n            };\n        case CHANGE_GAME_OVER:\n            return {\n                ...state,\n                gameOver: action.payload,\n            };\n        case CHANGE_CURRENT_PLAYER:\n            return { ...state, currentPlayer: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default game;\n","import { combineReducers } from 'redux';\n\nimport area from './area';\nimport game from './game';\n\nconst rootReducer = combineReducers({\n    gameReducer: game,\n    areaReducer: area,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers';\n\nexport type RootStore = ReturnType<typeof rootReducer>;\n\nexport default createStore(rootReducer, {}, devToolsEnhancer({}));\n","import {\n    RENDER_USER_SQUARE,\n    RENDER_COMPUTER_SQUARE,\n    CHANGE_USER_SQUARE_COMPLETE,\n    CHANGE_USER_SHIPS,\n    CHANGE_COMPUTER_SHIPS,\n    AreaDispatchTypes,\n} from '../types/area';\n\nimport { ICell } from '../../interface';\n\nexport const renderUserField = (field: ICell[][]): AreaDispatchTypes => {\n    return {\n        type: RENDER_USER_SQUARE,\n        payload: field,\n    };\n};\n\nexport const renderComputerField = (field: ICell[][]): AreaDispatchTypes => {\n    return {\n        type: RENDER_COMPUTER_SQUARE,\n        payload: field,\n    };\n};\n\nexport const changeUserFieldComplete = (complete: boolean): AreaDispatchTypes => {\n    return {\n        type: CHANGE_USER_SQUARE_COMPLETE,\n        payload: complete,\n    };\n};\n\nexport const changeUserShips = (ships: number[]): AreaDispatchTypes => {\n    return {\n        type: CHANGE_USER_SHIPS,\n        payload: ships,\n    };\n};\n\nexport const changeComputerShips = (ships: number[]): AreaDispatchTypes => {\n    return {\n        type: CHANGE_COMPUTER_SHIPS,\n        payload: ships,\n    };\n};\n","import { CHANGE_CURRENT_PLAYER, CHANGE_GAME_OVER, CHANGE_GAME_START, GameDispatchTypes } from '../types/game';\n\nimport { Owners } from '../../enums';\n\nexport const changeGameStart = (status: boolean): GameDispatchTypes => {\n    return {\n        type: CHANGE_GAME_START,\n        payload: status,\n    };\n};\n\nexport const changeGameOver = (status: boolean): GameDispatchTypes => {\n    return {\n        type: CHANGE_GAME_OVER,\n        payload: status,\n    };\n};\n\nexport const changeCurrentPlayer = (currentPlayer: Owners): GameDispatchTypes => {\n    return {\n        type: CHANGE_CURRENT_PLAYER,\n        payload: currentPlayer,\n    };\n};\n","import * as AreaActionCreators from './area';\nimport * as GameActionCreators from './game';\n\nexport default {\n    ...AreaActionCreators,\n    ...GameActionCreators,\n};\n","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport ActionCreators from '../store/action-creators';\n\nconst useActions = (): typeof ActionCreators => {\n    const dispatch = useDispatch();\n    return bindActionCreators(ActionCreators, dispatch);\n};\n\nexport default useActions;\n","export const AREA_NUMBERS: readonly string[] = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\nexport const AREA_LETTERS: readonly string[] = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'];\n\nexport const SHIPS: readonly number[] = [4, 3, 3, 2, 2, 2, 1, 1, 1, 1];\n","import { ICell } from '../interface';\n\n/**\n * Generate unique ID.\n */\nexport const getUniqId = (): string => Math.random().toString(36).substr(2, 16);\n\n/**\n * Generate a random value in the range 0 to maxValue.\n *\n * @param maxValue\n */\nexport const getRandomValue = (maxValue: number): number => Math.floor(Math.random() * maxValue);\n\n/**\n * Iterating over a two-dimensional array.\n *\n * @param array\n * @param func\n *\n * example:\n * iteratingTwoDimensionalArray(field, (i, j) => {});\n */\nexport const iteratingTwoDimensionalArray = (array: ICell[][], func: (i: number, j: number) => void): void => {\n    const { length } = array;\n\n    for (let i = 0; i < length; i += 1) {\n        for (let j = 0; j < length; j += 1) {\n            func(i, j);\n        }\n    }\n};\n\n/**\n * Iterating the flat array.\n *\n * @param array\n * @param func\n *\n * example:\n * iteratingFlatArray(array, cell => {});\n */\nexport const iteratingFlatArray = (array: ICell[][], func: (cell: ICell) => void): void => {\n    array.flat().forEach(cell => {\n        func(cell);\n    });\n};\n\n/**\n * Get multiple class names from object.\n *\n * @param classes\n */\nexport const getClassNames = (classes: Record<string, boolean>): string => {\n    return Object.entries(classes)\n        .filter(([, value]) => value)\n        .map(([key]) => key)\n        .join(' ');\n};\n","import { ICell } from '../interface';\nimport { CellDirection, ShipDirection } from '../enums';\nimport { getRandomValue, iteratingFlatArray, iteratingTwoDimensionalArray } from '../helpers';\n\n/**\n * Get cells around the current cell.\n *\n * @param field\n * @param i\n * @param j\n * @param direction\n */\nexport const getCellsAround = (field: ICell[][], i: number, j: number, direction?: CellDirection): (ICell | null)[] => {\n    const { Diagonal } = CellDirection;\n    const { length } = field;\n    const [numberUp, letterRight, numberDown, letterLeft] = [i - 1, j + 1, i + 1, j - 1];\n\n    const cellsDiagonal = [\n        numberUp >= 0 && letterLeft >= 0 ? field[numberUp][letterLeft] : null,\n        numberUp >= 0 && letterRight < length ? field[numberUp][letterRight] : null,\n        numberDown < length && letterLeft >= 0 ? field[numberDown][letterLeft] : null,\n        numberDown < length && letterRight < length ? field[numberDown][letterRight] : null,\n    ];\n\n    const cellsNonDiagonal = [\n        numberUp >= 0 ? field[numberUp][j] : null,\n        letterRight < length ? field[i][letterRight] : null,\n        numberDown < length ? field[numberDown][j] : null,\n        letterLeft >= 0 ? field[i][letterLeft] : null,\n    ];\n\n    const cellsDirection = direction === Diagonal ? cellsDiagonal : cellsNonDiagonal;\n\n    return direction ? cellsDirection : [...cellsDiagonal, ...cellsNonDiagonal];\n};\n\n/**\n * Get cell by ID.\n *\n * @param field\n * @param cellId\n */\nexport const getCellById = (field: ICell[][], cellId: string): ICell | null => {\n    let cell: ICell | null = null;\n\n    iteratingTwoDimensionalArray(field, (i, j) => {\n        const currentCell = field[i][j];\n\n        if (currentCell.id === cellId) {\n            cell = currentCell;\n        }\n    });\n\n    return cell;\n};\n\n/**\n * Get cell coordinates by ID.\n *\n * @param field\n * @param cellId\n */\nexport const getCellCoordsById = (field: ICell[][], cellId: string): number[] => {\n    let coords: number[] = [];\n\n    iteratingTwoDimensionalArray(field, (i, j) => {\n        const cell = field[i][j];\n\n        if (cell.id === cellId) {\n            coords = [i, j];\n        }\n    });\n\n    return coords;\n};\n\n/**\n * Get cells vertically or horizontally.\n *\n * @param array\n * @param direction\n */\nexport const getCellsByDirection = (array: (ICell | null)[], direction: ShipDirection): (ICell | null)[] => {\n    const { Vertical } = ShipDirection;\n\n    return array.filter((_, idx) => (direction === Vertical ? idx % 2 === 0 : idx % 2 !== 0));\n};\n\n/**\n * Get random empty cell.\n *\n * @param field\n */\nexport const getRandomEmptyCell = (field: ICell[][]): ICell => {\n    const { length } = field;\n    const coordX = getRandomValue(length);\n    const coordY = getRandomValue(length);\n    const cell = field[coordX][coordY];\n\n    return !cell.hit && !cell.miss ? cell : getRandomEmptyCell(field);\n};\n\n/**\n * Lock cell.\n *\n * @param cell\n * @param currentShipId\n */\nexport const lockCell = (cell: ICell | null, currentShipId: string): void => {\n    if (cell && !cell.ship) {\n        cell.lock = true;\n        cell.lockId = cell.lockId.length === 0 ? `lock-${currentShipId}` : cell.lockId;\n    }\n};\n\n/**\n * Lock all empty cells.\n *\n * @param field\n */\nexport const lockAllEmptyCells = (field: ICell[][]): void => {\n    iteratingFlatArray(field, cell => {\n        if (!cell.ship) {\n            cell.lock = true;\n        }\n    });\n};\n","import { SHIPS } from '../constants';\nimport { CellDirection } from '../enums';\nimport { getUniqId, iteratingFlatArray, iteratingTwoDimensionalArray } from '../helpers';\nimport { ICell } from '../interface';\nimport { getCellsAround, lockAllEmptyCells, lockCell } from './cell';\n\nlet initialShips = [...SHIPS];\nlet initialShipId = getUniqId();\nlet initialShipLength = 0;\nlet isStartCreateShip = true;\n\n/**\n * Reset the initial values.\n */\nconst resetInitialValues = (): void => {\n    initialShipId = getUniqId();\n    initialShipLength = 0;\n    isStartCreateShip = true;\n};\n\n/**\n * Reset the initial ships values.\n */\nexport const resetInitialShipsValues = (): void => {\n    initialShips = [...SHIPS];\n};\n\n/**\n * Finish creating one ship.\n *\n * @param field\n * @param currentShipId\n */\nexport const finishCreateShip = (field: ICell[][], currentShipId: string): ICell[][] => {\n    const { NonDiagonal } = CellDirection;\n\n    iteratingTwoDimensionalArray(field, (i, j) => {\n        const cell = field[i][j];\n\n        if (cell.shipId === currentShipId) {\n            getCellsAround(field, i, j, NonDiagonal).forEach(nonDiagonalCell => lockCell(nonDiagonalCell, initialShipId));\n        }\n    });\n    resetInitialValues();\n\n    return field;\n};\n\n/**\n * Cancel creating one ship.\n *\n * @param field\n * @param currentShipId\n */\nconst cancelCreateShip = (field: ICell[][], currentShipId: string): ICell[][] => {\n    iteratingFlatArray(field, cell => {\n        if (cell.shipId === currentShipId || cell.lockId === `lock-${currentShipId}`) {\n            cell.ship = false;\n            cell.shipId = '';\n            cell.lock = false;\n            cell.lockId = '';\n        }\n    });\n    resetInitialValues();\n\n    return field;\n};\n\n/**\n * Manage creating one ship.\n *\n * @param currentField\n */\nconst manageCreateShip = (currentField: ICell[][]): ICell[][] => {\n    let field = currentField;\n    const index = initialShips.indexOf(initialShipLength);\n\n    if (index >= 0) {\n        initialShips.splice(index, 1);\n        field = finishCreateShip(field, initialShipId);\n    } else {\n        cancelCreateShip(field, initialShipId);\n    }\n\n    return field;\n};\n\n/**\n * Start creating one ship.\n *\n * @param field\n * @param currentCellId\n */\nexport const startCreateShip = (field: ICell[][], currentCellId: string): ICell[][] => {\n    const { Diagonal, NonDiagonal } = CellDirection;\n\n    iteratingTwoDimensionalArray(field, (i, j) => {\n        const cell = field[i][j];\n\n        if (cell.id === currentCellId) {\n            const [cellUp, cellRight, cellDown, cellLeft] = getCellsAround(field, i, j, NonDiagonal);\n\n            if (\n                cellUp?.shipId === initialShipId ||\n                cellRight?.shipId === initialShipId ||\n                cellDown?.shipId === initialShipId ||\n                cellLeft?.shipId === initialShipId ||\n                isStartCreateShip\n            ) {\n                const maxShipLength = Math.max(...initialShips);\n\n                initialShipLength += 1;\n                cell.ship = true;\n                cell.shipId = initialShipId;\n                isStartCreateShip = false;\n\n                getCellsAround(field, i, j, Diagonal).forEach(diagonalCell => lockCell(diagonalCell, initialShipId));\n\n                if (initialShipLength === maxShipLength) {\n                    field = manageCreateShip(field);\n                }\n            } else {\n                field = manageCreateShip(field);\n                startCreateShip(field, currentCellId);\n            }\n        }\n    });\n\n    if (!initialShips.length) {\n        lockAllEmptyCells(field);\n        resetInitialValues();\n        resetInitialShipsValues();\n    }\n\n    return field;\n};\n","import { ICell } from '../interface';\nimport { getCellById, getCellCoordsById, getCellsAround } from './cell';\n\n/**\n * Explode the ship.\n *\n * @param field\n * @param currentShipId\n */\nexport const explodeShip = (field: ICell[][], currentShipId: string): ICell[][] => {\n    const arrayShip = field.flat().filter(cell => cell.shipId === currentShipId);\n    const countHitsShip = arrayShip.filter(cell => cell.hit).length;\n\n    const setMissCells = (cell: ICell) => {\n        const [coordX, coordY] = getCellCoordsById(field, cell.id);\n\n        getCellsAround(field, coordX, coordY).forEach(currentCell => {\n            if (currentCell && !currentCell.ship) {\n                currentCell.miss = true;\n            }\n        });\n    };\n\n    if (arrayShip.length === countHitsShip) {\n        arrayShip.forEach(cell => {\n            if (cell.shipId === currentShipId) {\n                cell.explode = true;\n\n                setMissCells(cell);\n            }\n        });\n    }\n\n    return field;\n};\n\n/**\n * Checking the shot hit or miss on the ship.\n *\n * @param field\n * @param currentCellId\n */\nexport const checkShot = (field: ICell[][], currentCellId: string): ICell[][] => {\n    const cell = getCellById(field, currentCellId) as ICell;\n\n    if (cell.ship) {\n        cell.hit = true;\n        field = explodeShip(field, cell.shipId);\n    } else {\n        cell.miss = true;\n    }\n\n    return field;\n};\n\n/**\n * Convert an array of ships objects to an array of formatted ships.\n *\n * @param array\n */\nexport const convertArrayShipsToRightFormat = (array: ICell[]): number[] => {\n    const temp = array.reduce((acc: Record<string, number>, { shipId }) => {\n        acc[shipId] = (acc[shipId] || 0) + 1;\n        return acc;\n    }, {});\n\n    return Object.values(temp).sort((a: number, b: number) => temp[b] - temp[a]);\n};\n\n/**\n * Get array of all ships.\n *\n * @param field\n */\nexport const getAllShips = (field: ICell[][]): number[] => {\n    const allShips = field.flat().filter(cell => cell.shipId);\n\n    return convertArrayShipsToRightFormat(allShips);\n};\n\n/**\n * Get array of non explode ships.\n *\n * @param field\n */\nexport const getNonExplodeShips = (field: ICell[][]): number[] => {\n    const allNonExplodeShips = field.flat().filter(cell => cell.shipId && !cell.explode);\n\n    return convertArrayShipsToRightFormat(allNonExplodeShips);\n};\n","import { ICell } from '../interface';\nimport { AREA_LETTERS, AREA_NUMBERS } from '../constants';\nimport { getNonExplodeShips } from './ship';\n\n/**\n * Create field with empty cells.\n */\nexport const createField = (): ICell[][] => {\n    const field: ICell[][] = [];\n\n    AREA_NUMBERS.forEach(number => {\n        const row: ICell[] = [];\n\n        AREA_LETTERS.forEach(letter => {\n            const cell = {\n                id: `${letter}${number}`,\n                ship: false,\n                shipId: '',\n                hit: false,\n                miss: false,\n                lock: false,\n                explode: false,\n                lockId: '',\n            };\n\n            row.push(cell);\n        });\n\n        field.push(row);\n    });\n\n    return field;\n};\n\n/**\n * Checking the end of the game.\n *\n * @param field\n */\nexport const isFinishGame = (field: ICell[][]): boolean => {\n    return !getNonExplodeShips(field).length;\n};\n","import { SHIPS } from '../constants';\nimport { CellDirection, ShipDirection } from '../enums';\nimport { getRandomValue, getUniqId } from '../helpers';\nimport { ICell } from '../interface';\nimport { getCellsAround, lockAllEmptyCells, lockCell } from './cell';\nimport { finishCreateShip } from './customCreateShip';\n\n/**\n * Get random cell coordinates.\n *\n * @param field\n * @param shipLength\n */\nconst getRandomCellCoords = (field: ICell[][], shipLength: number): number[] => {\n    const { length } = field;\n    const coordX = getRandomValue(length);\n    const coordY = getRandomValue(length);\n\n    if (\n        (coordX + shipLength > length && coordY + shipLength > length) ||\n        field[coordX][coordY].hit ||\n        field[coordX][coordY].lock ||\n        field[coordX][coordY].ship\n    ) {\n        getRandomCellCoords(field, shipLength);\n    }\n\n    return [coordX, coordY];\n};\n\n/**\n * Check empty cells.\n *\n * @param field\n * @param calculableValue\n * @param nonCalculableValue\n * @param shipLength\n * @param direction\n */\nconst checkEmptyCells = (\n    field: ICell[][],\n    calculableValue: number,\n    nonCalculableValue: number,\n    shipLength: number,\n    direction: ShipDirection,\n): boolean => {\n    const { Horizontal } = ShipDirection;\n\n    for (let i = calculableValue; i < calculableValue + shipLength; i += 1) {\n        const { hit, lock, ship } = direction === Horizontal ? field[nonCalculableValue][i] : field[i][nonCalculableValue];\n\n        if (hit || lock || ship) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n/**\n * Get ship direction.\n *\n * @param field\n * @param coordX\n * @param coordY\n * @param shipLength\n * @param fieldLength\n */\nconst getShipDirection = (\n    field: ICell[][],\n    coordX: number,\n    coordY: number,\n    shipLength: number,\n    fieldLength: number,\n): ShipDirection | null => {\n    const { Horizontal, Vertical } = ShipDirection;\n    let direction = null;\n\n    if (coordX + shipLength <= fieldLength && checkEmptyCells(field, coordX, coordY, shipLength, Vertical)) {\n        direction = Vertical;\n        return direction;\n    }\n\n    if (coordY + shipLength <= fieldLength && checkEmptyCells(field, coordY, coordX, shipLength, Horizontal)) {\n        direction = Horizontal;\n        return direction;\n    }\n\n    return direction;\n};\n\n/**\n * Get initial parameters to create a ship.\n *\n * @param field\n * @param shipLength\n */\nconst getInitialParams = (field: ICell[][], shipLength: number): { shipDirection: ShipDirection; coords: number[] } => {\n    const { length } = field;\n    const [coordX, coordY] = getRandomCellCoords(field, shipLength);\n    const shipDirection = getShipDirection(field, coordX, coordY, shipLength, length);\n\n    if (!shipDirection) {\n        return getInitialParams(field, shipLength);\n    }\n\n    return {\n        shipDirection,\n        coords: [coordX, coordY],\n    };\n};\n\n/**\n * Start creating one random ship.\n *\n * @param field\n * @param shipLength\n */\nconst startCreateRandomShip = (field: ICell[][], shipLength: number): ICell[][] => {\n    const { Diagonal } = CellDirection;\n    const { Vertical } = ShipDirection;\n    const {\n        shipDirection,\n        coords: [coordX, coordY],\n    } = getInitialParams(field, shipLength);\n\n    const uniqShipId = getUniqId();\n\n    for (let i = 0; i < shipLength; i += 1) {\n        let posX = coordX;\n        let posY = coordY;\n\n        if (shipDirection === Vertical) {\n            posX += i;\n        } else {\n            posY += i;\n        }\n\n        field[posX][posY].ship = true;\n        field[posX][posY].shipId = uniqShipId;\n\n        getCellsAround(field, posX, posY, Diagonal).forEach(diagonalCell => lockCell(diagonalCell, uniqShipId));\n    }\n\n    finishCreateShip(field, uniqShipId);\n\n    return field;\n};\n\n/**\n * Random location ships.\n *\n * @param field\n */\nconst randomLocationShips = (field: ICell[][]): ICell[][] => {\n    SHIPS.forEach(shipLength => {\n        startCreateRandomShip(field, shipLength);\n    });\n    lockAllEmptyCells(field);\n\n    return field;\n};\n\nexport default randomLocationShips;\n","import AreaAxes from './AreaAxes';\n\nexport default AreaAxes;\n","import React, { FC } from 'react';\n\ninterface IAreaAxesProps {\n    array: readonly string[];\n}\n\nconst AreaAxes: FC<IAreaAxesProps> = ({ array }: IAreaAxesProps) => {\n    return (\n        <>\n            {array.map(el => (\n                <div className=\"cell\" key={el}>\n                    {el.toUpperCase()}\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default AreaAxes;\n","import AreaButton from './AreaButton';\n\nexport default AreaButton;\n","import React, { FC, MouseEvent, ReactElement } from 'react';\n\nimport './AreaButton.scss';\n\ninterface AreaButtonProps {\n    icon: ReactElement;\n    clicked: (event: MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst AreaButton: FC<AreaButtonProps> = ({ icon, clicked }: AreaButtonProps) => {\n    return (\n        <button type=\"button\" className=\"area__button\" onClick={clicked}>\n            {icon}\n        </button>\n    );\n};\n\nexport default AreaButton;\n","import AreaButtons from './AreaButtons';\n\nexport default AreaButtons;\n","import React, { FC, ReactNode } from 'react';\n\nimport './AreaButtons.scss';\n\ninterface AreaButtonsProps {\n    children: ReactNode;\n}\n\nconst AreaButtons: FC<AreaButtonsProps> = ({ children }: AreaButtonsProps) => {\n    return <div className=\"area__buttons\">{children}</div>;\n};\n\nexport default AreaButtons;\n","import useActions from './useActions';\n\nexport default useActions;\n","import { CellDirection, ShipDirection } from '../enums';\nimport { getRandomValue } from '../helpers';\nimport { ICell } from '../interface';\n\nimport { isFinishGame } from './field';\nimport { getCellCoordsById, getCellsAround, getCellsByDirection, getRandomEmptyCell } from './cell';\nimport { checkShot } from './ship';\n\nlet firstHitCell: null | ICell = null;\nlet initialDirection: null | ShipDirection.Horizontal | ShipDirection.Vertical = null;\nlet initialCellsForShot: {\n    VerticalCells: (ICell | null)[];\n    HorizontalCells: (ICell | null)[];\n} = {\n    VerticalCells: [],\n    HorizontalCells: [],\n};\n\n/**\n * Reset the initial values.\n */\nconst resetInitialValues = (): void => {\n    firstHitCell = null;\n    initialDirection = null;\n    initialCellsForShot = {\n        VerticalCells: [],\n        HorizontalCells: [],\n    };\n};\n\n/**\n * Random computer shot.\n *\n * @param field\n */\nconst randomComputerShot = (field: ICell[][]): [ICell[][], boolean] => {\n    if (isFinishGame(field)) {\n        return [field, false];\n    }\n\n    const { Horizontal, Vertical } = ShipDirection;\n    const { NonDiagonal } = CellDirection;\n    const { VerticalCells, HorizontalCells } = initialCellsForShot;\n    let cell: ICell | null = getRandomEmptyCell(field);\n    let again = false;\n\n    if (initialDirection === Vertical) {\n        cell = VerticalCells[getRandomValue(VerticalCells.length)];\n    } else if (initialDirection === Horizontal) {\n        cell = HorizontalCells[getRandomValue(HorizontalCells.length)];\n    } else if ([...VerticalCells, ...HorizontalCells].length) {\n        cell = [...VerticalCells, ...HorizontalCells][getRandomValue([...VerticalCells, ...HorizontalCells].length)];\n    }\n\n    if (cell) {\n        if (cell.ship) {\n            const [cellCoordX, cellCoordY] = getCellCoordsById(field, cell.id);\n            const nonDiagonalCells = getCellsAround(field, cellCoordX, cellCoordY, NonDiagonal);\n\n            VerticalCells.push(...getCellsByDirection(nonDiagonalCells, Vertical));\n            HorizontalCells.push(...getCellsByDirection(nonDiagonalCells, Horizontal));\n\n            if (firstHitCell) {\n                const [firstHitCoordX, firstHitCoordY] = getCellCoordsById(field, firstHitCell.id);\n                const nonDiagonalCellsFirstHitOnShip = getCellsAround(field, firstHitCoordX, firstHitCoordY, NonDiagonal);\n\n                VerticalCells.push(...getCellsByDirection(nonDiagonalCellsFirstHitOnShip, Vertical));\n                HorizontalCells.push(...getCellsByDirection(nonDiagonalCellsFirstHitOnShip, Horizontal));\n\n                if (!initialDirection) {\n                    initialDirection = cellCoordX === firstHitCoordX ? Horizontal : Vertical;\n                }\n            } else {\n                firstHitCell = cell;\n            }\n\n            again = true;\n        }\n\n        checkShot(field, cell.id);\n\n        if (cell.explode) {\n            resetInitialValues();\n        }\n    }\n\n    initialCellsForShot.VerticalCells = VerticalCells.filter(el => el && !el.hit && !el.miss);\n    initialCellsForShot.HorizontalCells = HorizontalCells.filter(el => el && !el.hit && !el.miss);\n\n    return [field, again];\n};\n\nexport default randomComputerShot;\n","import React, { FC, MouseEvent } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { RootStore } from '../../store';\nimport useActions from '../../hooks';\n\nimport { SHIPS } from '../../constants';\nimport { Owners } from '../../enums';\nimport { getClassNames } from '../../helpers';\nimport { ICell } from '../../interface';\n\nimport { startCreateShip } from '../../utils/customCreateShip';\nimport { isFinishGame } from '../../utils/field';\nimport randomComputerShot from '../../utils/randomComputerShot';\nimport { checkShot, getAllShips, getNonExplodeShips } from '../../utils/ship';\n\nimport './Cell.scss';\n\nconst Cell: FC<ICell> = ({ id, ship, hit, miss, lock, explode, owner }: ICell) => {\n    const { User, Computer } = Owners;\n    const isUser = owner === User;\n    const isDisabled = isUser ? hit || ship || miss || lock : hit || miss || explode;\n    const className = isUser ? getClassNames({ hit, miss, ship, lock, explode }) : getClassNames({ hit, miss, explode });\n\n    const {\n        renderUserField,\n        renderComputerField,\n        changeCurrentPlayer,\n        changeGameStart,\n        changeUserShips,\n        changeComputerShips,\n        changeUserFieldComplete,\n        changeGameOver,\n    } = useActions();\n\n    const {\n        user: { userField },\n        computer: { computerField },\n    } = useSelector(({ areaReducer }: RootStore) => areaReducer);\n\n    let currentField = isUser ? userField : computerField;\n\n    const manageGameStatus = (field: ICell[][]): void => {\n        if (isFinishGame(field)) {\n            changeGameStart(false);\n            changeGameOver(true);\n        }\n    };\n\n    const updateUserCellOnCreate = (): void => {\n        const field = startCreateShip(userField, id);\n\n        renderUserField(field);\n        changeUserShips(getNonExplodeShips(userField));\n        changeUserFieldComplete(getAllShips(field).length === SHIPS.length);\n    };\n\n    const updateUserCellOnShot = (): void => {\n        setTimeout(() => {\n            const [field, isAgain] = randomComputerShot(userField);\n            currentField = field;\n\n            renderUserField(currentField);\n            changeUserShips(getNonExplodeShips(userField));\n            manageGameStatus(currentField);\n\n            if (isAgain) {\n                updateUserCellOnShot();\n            } else if (!isFinishGame(field)) {\n                changeCurrentPlayer(User);\n            }\n        }, 700);\n    };\n\n    const updateComputerCellOnShot = (): void => {\n        currentField = checkShot(computerField, id);\n\n        renderComputerField(currentField);\n        manageGameStatus(currentField);\n\n        const [{ miss: userClickMiss, explode: userClickExplode }] = computerField.flat().filter(cell => cell.id === id);\n\n        if (userClickMiss) {\n            changeCurrentPlayer(Computer);\n            updateUserCellOnShot();\n        }\n\n        if (userClickExplode) {\n            changeComputerShips(getNonExplodeShips(computerField));\n        }\n    };\n\n    const updateCellHandler = (evn: MouseEvent<HTMLButtonElement>): void => {\n        evn.preventDefault();\n\n        if (isUser) {\n            updateUserCellOnCreate();\n        } else {\n            updateComputerCellOnShot();\n        }\n    };\n\n    return (\n        <button type=\"button\" id={id} className={`cell ${className}`} onClick={updateCellHandler} aria-label={id} disabled={isDisabled} />\n    );\n};\n\nexport default Cell;\n","import React, { FC } from 'react';\n\nimport { Owners } from '../../enums';\nimport { ICell } from '../../interface';\n\nimport Cell from '../Cell/Cell';\n\ninterface ICellRowProps {\n    row: Array<ICell>;\n    cellRowOwner: Owners;\n}\n\nconst CellRow: FC<ICellRowProps> = ({ row, cellRowOwner }: ICellRowProps) => {\n    return (\n        <div className=\"area__row\">\n            {row.map(({ id, ship, shipId, hit, miss, lock, lockId, explode }) => (\n                <Cell\n                    key={id}\n                    id={id}\n                    hit={hit}\n                    ship={ship}\n                    shipId={shipId}\n                    miss={miss}\n                    lock={lock}\n                    lockId={lockId}\n                    explode={explode}\n                    owner={cellRowOwner}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default CellRow;\n","import Field from './Field';\n\nexport default Field;\n","import React, { FC, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { RootStore } from '../../store';\nimport useActions from '../../hooks/useActions';\n\nimport { Owners } from '../../enums';\nimport { ICell } from '../../interface';\n\nimport { createField } from '../../utils/field';\n\nimport CellRow from '../CellRow/CellRow';\n\ninterface IFieldProps {\n    fieldOwner: Owners;\n}\n\nconst Field: FC<IFieldProps> = ({ fieldOwner }: IFieldProps) => {\n    const { User } = Owners;\n\n    const { renderUserField, renderComputerField } = useActions();\n\n    const {\n        user: { userField },\n        computer: { computerField },\n    } = useSelector(({ areaReducer }: RootStore) => areaReducer);\n\n    const currentField = fieldOwner === User ? userField : computerField;\n\n    useEffect(() => {\n        renderUserField(createField());\n        renderComputerField(createField());\n    }, []);\n\n    return (\n        <>\n            {currentField.map((row: ICell[], idx: number) => (\n                <CellRow key={row[idx].id} row={row} cellRowOwner={fieldOwner} />\n            ))}\n        </>\n    );\n};\n\nexport default Field;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 464c-119.1 0-216-96.9-216-216S128.9 40 248 40s216 96.9 216 216-96.9 216-216 216zm0-152c-44.4 0-86.2 19.6-114.8 53.8-5.7 6.8-4.8 16.9 2 22.5 6.8 5.7 16.9 4.8 22.5-2 22.4-26.8 55.3-42.2 90.2-42.2s67.8 15.4 90.2 42.2c5.3 6.4 15.4 8 22.5 2 6.8-5.7 7.7-15.8 2-22.5C334.2 339.6 292.4 320 248 320zm-80-80c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32z\"\n});\n\nfunction SvgFrown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 496 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFrown);\nexport default __webpack_public_path__ + \"static/media/frown.93f55f3a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 464c-119.1 0-216-96.9-216-216S128.9 40 248 40s216 96.9 216 216-96.9 216-216 216zm90.2-146.2C315.8 352.6 282.9 368 248 368s-67.8-15.4-90.2-42.2c-5.7-6.8-15.8-7.7-22.5-2-6.8 5.7-7.7 15.7-2 22.5C161.7 380.4 203.6 400 248 400s86.3-19.6 114.8-53.8c5.7-6.8 4.8-16.9-2-22.5-6.8-5.6-16.9-4.7-22.6 2.1zM168 240c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32z\"\n});\n\nfunction SvgSmile(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 496 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSmile);\nexport default __webpack_public_path__ + \"static/media/smile.080b5c10.svg\";\nexport { ForwardRef as ReactComponent };","import FinalMessage from './FinalMessage';\n\nexport default FinalMessage;\n","import React, { FC } from 'react';\n\nimport { Owners } from '../../enums';\n\nimport { ReactComponent as SVGFrown } from '../../assets/icons/frown.svg';\nimport { ReactComponent as SVGSmile } from '../../assets/icons/smile.svg';\n\nimport './FinalMessage.scss';\n\ninterface IFinalMessageProps {\n    player: Owners | null;\n}\n\nconst FinalMessage: FC<IFinalMessageProps> = ({ player }: IFinalMessageProps) => {\n    const { User } = Owners;\n    const message = player === User ? 'Поздравляем! Вы победили!' : 'Вы проиграли';\n\n    return (\n        <div className=\"final-message\">\n            <h2 className=\"final-message__title\">\n                {message}\n                {player === User ? <SVGSmile /> : <SVGFrown />}\n            </h2>\n        </div>\n    );\n};\n\nexport default FinalMessage;\n","import Hints from './Hints';\n\nexport default Hints;\n","import React, { FC } from 'react';\n\ninterface IHintsProps {\n    hintText: string;\n}\n\nconst Hints: FC<IHintsProps> = ({ hintText }: IHintsProps) => {\n    return (\n        <div className=\"sea-battle__hints hints\">\n            <h2>{hintText}</h2>\n        </div>\n    );\n};\n\nexport default Hints;\n","import Modal from './Modal';\n\nexport default Modal;\n","import React, { FC, useEffect } from 'react';\n\nimport './Modal.scss';\n\ninterface IModalProps {\n    clickedOutside: () => void;\n    children: JSX.Element;\n}\n\nconst Modal: FC<IModalProps> = ({ clickedOutside, children }: IModalProps) => {\n    const handleKeyDown = ({ keyCode }: KeyboardEvent): void => {\n        if (keyCode === 27) {\n            clickedOutside();\n        }\n    };\n\n    const handleClickOutside = ({ target }: MouseEvent): void => {\n        if ((target as HTMLElement).classList.contains('modal')) {\n            clickedOutside();\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n        window.addEventListener('click', handleClickOutside);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n            window.removeEventListener('click', handleClickOutside);\n        };\n    }, []);\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal__message\">{children}</div>\n        </div>\n    );\n};\n\nexport default Modal;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M505 359l-80-80c-15-15-41-4.47-41 17v40h-32l-52.78-56.55-53.33 57.14 70.55 75.6a12 12 0 0 0 8.77 3.81H384v40c0 21.46 26 32 41 17l80-80a24 24 0 0 0 0-34zM122.79 96H12a12 12 0 0 0-12 12v56a12 12 0 0 0 12 12h84l52.78 56.55 53.33-57.14-70.55-75.6a12 12 0 0 0-8.77-3.81z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M505 119a24 24 0 0 1 0 34l-80 80c-15 15-41 4.48-41-17v-40h-32L131.56 412.19a12 12 0 0 1-8.77 3.81H12a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h84L316.44 99.81a12 12 0 0 1 8.78-3.81H384V56c0-21.44 25.94-32 41-17z\"\n}));\n\nfunction SvgRandom(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRandom);\nexport default __webpack_public_path__ + \"static/media/random.2c4d7202.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6zM48 453.5v-395c0-4.6 5.1-7.5 9.1-5.2l334.2 197.5c3.9 2.3 3.9 8 0 10.3L57.1 458.7c-4 2.3-9.1-.6-9.1-5.2z\"\n});\n\nfunction SvgPlay(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlay);\nexport default __webpack_public_path__ + \"static/media/play.b1032db7.svg\";\nexport { ForwardRef as ReactComponent };","import Rules from './Rules';\n\nexport default Rules;\n","import React, { FC } from 'react';\n\nimport { ReactComponent as SVGRandom } from '../../assets/icons/random.svg';\nimport { ReactComponent as SVGPlay } from '../../assets/icons/play.svg';\n\nimport './Rules.scss';\n\nconst Rules: FC = () => {\n    return (\n        <div className=\"rules\">\n            <h2 className=\"rules__title\">Начало игры:</h2>\n            <ul className=\"rules__list\">\n                <li>Слева находится ваше поле, справа - поле противника.</li>\n                <li>Можете самостоятельно разместить корабли. Для этого кликайте мышкой по вашему полю.</li>\n                <li>\n                    Чтобы разместить корабли рандомно воспользуйтесь кнопкой\n                    <span className=\"rules__icon\">\n                        <SVGRandom />\n                    </span>\n                </li>\n                <li>\n                    Чтобы начать игру воспользуйтесь кнопкой\n                    <span className=\"rules__icon\">\n                        <SVGPlay />\n                    </span>\n                </li>\n            </ul>\n            <h2 className=\"rules__title\">Описание игры:</h2>\n            <p>Игровое поле имеет площадь 10x10. На игровом поле размещаются:</p>\n            <ul className=\"rules__list\">\n                <li>1 корабль — ряд из 4 клеток («четырёхпалубный» - линкор)</li>\n                <li>2 корабля — ряд из 3 клеток («трёхпалубные» - крейсера)</li>\n                <li>3 корабля — ряд из 2 клеток («двухпалубные» - эсминцы)</li>\n                <li>4 корабля — 1 клетка («однопалубные» - торпедные катера)</li>\n            </ul>\n            <p>При размещении корабли не могут касаться друг друга сторонами и углами. Расстояние между кораблями минимум 1 клетка.</p>\n        </div>\n    );\n};\n\nexport default Rules;\n","import React, { FC } from 'react';\n\nimport './Ship.scss';\n\ninterface IShipProps {\n    cellCount: number;\n}\n\nconst Ship: FC<IShipProps> = ({ cellCount }: IShipProps) => {\n    return (\n        <div className=\"ship__button\">\n            {[...Array(cellCount).keys()].map(partShip => (\n                <span className=\"ship__button-cell\" key={partShip} />\n            ))}\n        </div>\n    );\n};\n\nexport default Ship;\n","import React, { FC } from 'react';\n\nimport { getClassNames } from '../../helpers';\n\nimport Ship from '../Ship/Ship';\n\ninterface IShipRowProps {\n    shipLength: number;\n    shipHas: boolean;\n}\n\nconst ShipRow: FC<IShipRowProps> = ({ shipLength, shipHas }: IShipRowProps) => {\n    return (\n        <div className={`ships__row ship ${getClassNames({ 'is-has': shipHas })}`}>\n            <Ship cellCount={shipLength} />\n        </div>\n    );\n};\n\nexport default ShipRow;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { RootStore } from '../../store';\n\nimport { SHIPS } from '../../constants';\nimport { Owners } from '../../enums';\nimport { getUniqId } from '../../helpers';\n\nimport ShipRow from '../ShipsRow/ShipRow';\n\nimport './Ships.scss';\n\ninterface IShipsProps {\n    shipsOwner: Owners;\n}\n\nconst Ships: FC<IShipsProps> = ({ shipsOwner }: IShipsProps) => {\n    const { User } = Owners;\n\n    const {\n        user: { userShips },\n        computer: { computerShips },\n    } = useSelector(({ areaReducer }: RootStore) => areaReducer);\n\n    const shipsArray = shipsOwner === User ? userShips.slice() : computerShips.slice();\n\n    const ships = [...SHIPS].map(ship => {\n        const temp = {\n            length: ship,\n            isHas: !!shipsArray.find(currentShip => currentShip === ship),\n        };\n\n        if (temp.isHas) {\n            shipsArray.splice(\n                shipsArray.findIndex(currentShip => currentShip === ship),\n                1,\n            );\n        }\n\n        return temp;\n    });\n\n    return (\n        <div className=\"ships\">\n            {ships.map(({ length, isHas }) => (\n                <ShipRow key={getUniqId()} shipLength={length} shipHas={isHas} />\n            ))}\n        </div>\n    );\n};\n\nexport default Ships;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z\"\n});\n\nfunction SvgQuestion(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgQuestion);\nexport default __webpack_public_path__ + \"static/media/question.a5ae4239.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M207.6 256l107.72-107.72c6.23-6.23 6.23-16.34 0-22.58l-25.03-25.03c-6.23-6.23-16.34-6.23-22.58 0L160 208.4 52.28 100.68c-6.23-6.23-16.34-6.23-22.58 0L4.68 125.7c-6.23 6.23-6.23 16.34 0 22.58L112.4 256 4.68 363.72c-6.23 6.23-6.23 16.34 0 22.58l25.03 25.03c6.23 6.23 16.34 6.23 22.58 0L160 303.6l107.72 107.72c6.23 6.23 16.34 6.23 22.58 0l25.03-25.03c6.23-6.23 6.23-16.34 0-22.58L207.6 256z\"\n});\n\nfunction SvgTimes(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 320 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTimes);\nexport default __webpack_public_path__ + \"static/media/times.65cc6ffe.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M432 80h-82.4l-34-56.7A48 48 0 0 0 274.4 0H173.6a48 48 0 0 0-41.2 23.3L98.4 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16l21.2 339a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM173.6 48h100.8l19.2 32H154.4zm173.3 416H101.11l-21-336h287.8z\"\n});\n\nfunction SvgTrash(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrash);\nexport default __webpack_public_path__ + \"static/media/trash.3a1e6017.svg\";\nexport { ForwardRef as ReactComponent };","import Area from './Area';\n\nexport default Area;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { RootStore } from '../../store';\nimport useActions from '../../hooks/useActions';\n\nimport { AREA_LETTERS, AREA_NUMBERS, SHIPS } from '../../constants';\nimport { HintOptions, Owners } from '../../enums';\n\nimport { resetInitialShipsValues } from '../../utils/customCreateShip';\nimport { createField } from '../../utils/field';\nimport randomLocationShips from '../../utils/randomLocationShips';\n\nimport AreaAxes from '../AreaAxes';\nimport AreaButton from '../AreaButton';\nimport AreaButtons from '../AreaButtons';\nimport Field from '../Field';\nimport FinalMessage from '../FinalMessage';\nimport Hints from '../Hints';\nimport Modal from '../Modal';\nimport Rules from '../Rules';\nimport Ships from '../Ships/Ships';\n\nimport { ReactComponent as SVGPlay } from '../../assets/icons/play.svg';\nimport { ReactComponent as SVGQuestion } from '../../assets/icons/question.svg';\nimport { ReactComponent as SVGRandom } from '../../assets/icons/random.svg';\nimport { ReactComponent as SVGTimes } from '../../assets/icons/times.svg';\nimport { ReactComponent as SVGTrash } from '../../assets/icons/trash.svg';\n\nimport './Area.scss';\n\ninterface AreaProps {\n    areaOwner: Owners;\n}\n\nconst Area: FC<AreaProps> = ({ areaOwner }: AreaProps) => {\n    const { User, Computer } = Owners;\n    const { PlayerShot, ComputerShot } = HintOptions;\n\n    const {\n        renderUserField,\n        renderComputerField,\n        changeGameStart,\n        changeUserShips,\n        changeComputerShips,\n        changeUserFieldComplete,\n        changeGameOver,\n    } = useActions();\n\n    const {\n        user: { userComplete },\n    } = useSelector(({ areaReducer }: RootStore) => areaReducer);\n    const { gameStart, gameOver, currentPlayer } = useSelector(({ gameReducer }: RootStore) => gameReducer);\n\n    const [openHints, setOpenHints] = useState(false);\n\n    useEffect(() => {\n        if (gameOver) {\n            setOpenHints(true);\n        }\n    }, [gameOver]);\n\n    const displayHints = currentPlayer === Computer ? ComputerShot : PlayerShot;\n    const fieldClassNameDisabled =\n        (areaOwner === Computer && !gameStart) || (areaOwner === User && gameStart) || currentPlayer === Computer ? 'is-disabled' : '';\n\n    const userRandomLocationShipsHandler = (): void => {\n        renderUserField(randomLocationShips(createField()));\n\n        if (!userComplete) {\n            changeUserShips([...SHIPS]);\n            changeUserFieldComplete(true);\n        }\n    };\n\n    const userClearFieldHandler = (): void => {\n        renderUserField(createField());\n        renderComputerField(createField());\n        changeUserFieldComplete(false);\n        changeUserShips([]);\n        changeComputerShips([]);\n        resetInitialShipsValues();\n    };\n\n    const startGameHandler = (): void => {\n        if (!userComplete) {\n            renderUserField(randomLocationShips(createField()));\n            changeUserShips([...SHIPS]);\n        }\n\n        renderComputerField(randomLocationShips(createField()));\n        changeComputerShips([...SHIPS]);\n        changeGameStart(true);\n    };\n\n    const resetGameHandler = (): void => {\n        userClearFieldHandler();\n        changeGameStart(false);\n    };\n\n    const openModal = (): void => {\n        setOpenHints(true);\n    };\n\n    const closeModal = (): void => {\n        setOpenHints(false);\n\n        if (gameOver) {\n            changeGameOver(false);\n        }\n    };\n\n    return (\n        <div className={`area ${areaOwner.toLowerCase()}`}>\n            <Ships shipsOwner={areaOwner} />\n            <div className=\"area__container\">\n                {areaOwner === User && (\n                    <AreaButtons>\n                        {gameStart ? (\n                            <AreaButton clicked={resetGameHandler} icon={<SVGTimes />} />\n                        ) : (\n                            <>\n                                <AreaButton clicked={openModal} icon={<SVGQuestion />} />\n                                <AreaButton clicked={userRandomLocationShipsHandler} icon={<SVGRandom />} />\n                                <AreaButton clicked={userClearFieldHandler} icon={<SVGTrash />} />\n                                <AreaButton clicked={startGameHandler} icon={<SVGPlay />} />\n                            </>\n                        )}\n                    </AreaButtons>\n                )}\n                <div className=\"area__letters\">\n                    <AreaAxes array={AREA_LETTERS} />\n                </div>\n                <div className=\"area__numbers\">\n                    <AreaAxes array={AREA_NUMBERS} />\n                </div>\n                <div className={`area__wrapper ${fieldClassNameDisabled} ${areaOwner.toLowerCase()}`}>\n                    <Field fieldOwner={areaOwner} />\n                </div>\n            </div>\n            {openHints && (\n                <Modal clickedOutside={closeModal}>{!gameStart && !gameOver ? <Rules /> : <FinalMessage player={currentPlayer} />}</Modal>\n            )}\n            {areaOwner === Computer && gameStart && <Hints hintText={displayHints} />}\n        </div>\n    );\n};\n\nexport default Area;\n","import React, { FC } from 'react';\n\nimport { Owners } from '../../enums';\n\nimport Area from '../Area';\n\nimport './Game.scss';\n\nconst Game: FC = () => {\n    const { User, Computer } = Owners;\n\n    return (\n        <div className=\"sea-battle\">\n            <div className=\"sea-battle__areas\">\n                <Area areaOwner={User} />\n                <Area areaOwner={Computer} />\n            </div>\n        </div>\n    );\n};\n\nexport default Game;\n","import React, { FC } from 'react';\n\nimport Game from './components/Game/Game';\n\nconst App: FC = () => {\n    return <Game />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}